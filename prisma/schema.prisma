generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model category {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)
  meta meta?
}

model clap {
  id      Int     @id @default(autoincrement())
  user_id Int
  post_id Int
  post    post[]  @relation("ClapToPost")
  user    users[] @relation("ClapToUser")
}

model comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.VarChar(1000)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  post_id   Int
  user_id   Int
  post      post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
  user      users    @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model meta {
  id          Int      @id @default(autoincrement())
  description String?  @db.VarChar(500)
  postBanner  String?  @db.VarChar(255)
  tag         String[]
  categoryId  Int      @unique
  category    category @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  post        post?
}

model post {
  id              Int       @id @default(autoincrement())
  title           String    @db.VarChar(250)
  content         String
  published       Boolean   @default(false)
  created_at      DateTime  @default(now()) @db.Timestamp(6)
  updated_at      DateTime
  author_id       Int
  meta            Int       @unique
  user            users     @relation(fields: [author_id], references: [id], onDelete: NoAction)
  meta_metaTopost meta      @relation(fields: [meta], references: [id], onDelete: Cascade)
  comment         comment[]
  clap            clap[]    @relation("ClapToPost")
}

model users {
  id        Int       @id @default(autoincrement())
  email     String    @unique @db.VarChar(255)
  password  String    @db.VarChar(255)
  firstname String    @db.VarChar(250)
  lastname  String?   @db.VarChar(250)
  school    String?   @db.VarChar(250)
  comment   comment[]
  post      post[]
  clap      clap[]    @relation("ClapToUser")
}
