generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Category {
  id   Int    @id @default(autoincrement())
  name String @db.VarChar(255)

  @@map("categories")
}

model Comment {
  id        Int      @id @default(autoincrement())
  content   String   @db.VarChar(1000)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  post_id   Int
  user_id   Int
  post      Thread   @relation(fields: [post_id], references: [id], onDelete: Cascade)
  user      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("comments")
}

model Thread {
  id         Int       @id @default(autoincrement())
  title      String    @db.VarChar(250)
  content    String
  published  Boolean   @default(false)
  created_at DateTime  @default(now()) @db.Timestamp(6)
  updated_at DateTime
  author_id  Int
  forum_id   Int
  comment    Comment[]
  user       User      @relation(fields: [author_id], references: [id], onDelete: NoAction)
  forum      Forum     @relation(fields: [forum_id], references: [id], onDelete: Cascade)

  @@map("threads")
}

model User {
  id             Int       @id @default(autoincrement())
  email          String    @unique @db.VarChar(255)
  password       String    @db.VarChar(255)
  firstname      String    @db.VarChar(250)
  lastname       String?   @db.VarChar(250)
  profilePicture String?   @map("profile_picture") @db.VarChar(250)
  comment        Comment[]
  post           Thread[]

  @@map("users")
}

model Forum {
  id             Int         @id @default(autoincrement())
  name           String      @db.VarChar(250)
  summary        String      @db.VarChar(250)
  description    String?     @db.VarChar(700)
  banner         String?     @db.VarChar(250)
  profilePicture String?     @map("profile_picture") @db.VarChar(250)
  forum_tags     ForumTags[]
  Thread         Thread[]

  @@map("forums")
}

model Tag {
  id         Int         @id
  name       String      @db.VarChar(50)
  forum_tags ForumTags[]

  @@map("tags")
}

model ForumTags {
  forum_id Int
  tag_id   Int
  forums   Forum @relation(fields: [forum_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  tags     Tag   @relation(fields: [tag_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@id([forum_id, tag_id])
  @@map("forum_tags")
}
